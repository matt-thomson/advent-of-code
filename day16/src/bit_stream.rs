const BITS: [[u32; 4]; 16] = [
    [0, 0, 0, 0],
    [0, 0, 0, 1],
    [0, 0, 1, 0],
    [0, 0, 1, 1],
    [0, 1, 0, 0],
    [0, 1, 0, 1],
    [0, 1, 1, 0],
    [0, 1, 1, 1],
    [1, 0, 0, 0],
    [1, 0, 0, 1],
    [1, 0, 1, 0],
    [1, 0, 1, 1],
    [1, 1, 0, 0],
    [1, 1, 0, 1],
    [1, 1, 1, 0],
    [1, 1, 1, 1],
];

pub fn bits(input: &str) -> Vec<u32> {
    (0..input.len())
        .map(|i| usize::from_str_radix(&input[i..i + 1], 16).unwrap())
        .flat_map(|hex| BITS[hex])
        .collect()
}
